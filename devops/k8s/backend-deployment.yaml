apiVersion: v1
kind: ConfigMap
metadata:
  name: ai-calling-backend-config
  namespace: ai-calling-agent
data:
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  LOG_FORMAT: "json"
  DATABASE_ECHO: "false"
  DATABASE_POOL_SIZE: "10"
  DATABASE_MAX_OVERFLOW: "20"
  REDIS_SESSION_DB: "1"
  REDIS_MAX_CONNECTIONS: "20"
  CELERY_TASK_SERIALIZER: "json"
  CELERY_RESULT_SERIALIZER: "json"
  CELERY_TIMEZONE: "UTC"

---
apiVersion: v1
kind: Secret
metadata:
  name: ai-calling-backend-secrets
  namespace: ai-calling-agent
type: Opaque
data:
  # Base64 encoded values - replace with your actual encoded secrets
  DATABASE_URL: cG9zdGdyZXNxbCthc3luY3BnOi8vdXNlcjpwYXNzd29yZEBwb3N0Z3Jlcy5haS1jYWxsaW5nLWFnZW50LnN2Yy5jbHVzdGVyLmxvY2FsOjU0MzIvYWlfY2FsbGluZ19hZ2VudA==
  REDIS_URL: cmVkaXM6Ly86cGFzc3dvcmRAcmVkaXMuYWktY2FsbGluZy1hZ2VudC5zdmMuY2x1c3Rlci5sb2NhbDo2Mzc5LzA=
  API_SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQta2V5LWNoYW5nZS10aGlzLWluLXByb2R1Y3Rpb24=
  OPENAI_API_KEY: c2steW91ci1vcGVuYWktYXBpLWtleS1oZXJl
  ELEVENLABS_API_KEY: eW91ci1lbGV2ZW5sYWJzLWFwaS1rZXktaGVyZQ==
  TWILIO_ACCOUNT_SID: eW91cl90d2lsaW9fYWNjb3VudF9zaWQ=
  TWILIO_AUTH_TOKEN: eW91cl90d2lsaW9fYXV0aF90b2tlbg==
  TWILIO_PHONE_NUMBER: KzEyMzQ1Njc4OTA=
  CELERY_BROKER_URL: cmVkaXM6Ly86cGFzc3dvcmRAcmVkaXMuYWktY2FsbGluZy1hZ2VudC5zdmMuY2x1c3Rlci5sb2NhbDo2Mzc5LzA=
  CELERY_RESULT_BACKEND: cmVkaXM6Ly86cGFzc3dvcmRAcmVkaXMuYWktY2FsbGluZy1hZ2VudC5zdmMuY2x1c3Rlci5sb2NhbDo2Mzc5LzA=

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-calling-backend
  namespace: ai-calling-agent
  labels:
    app: ai-calling-backend
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: ai-calling-backend
  template:
    metadata:
      labels:
        app: ai-calling-backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ai-calling-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: backend
        image: your-registry/ai-calling-agent-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: TWILIO_WEBHOOK_BASE_URL
          value: "https://your-domain.com"
        envFrom:
        - configMapRef:
            name: ai-calling-backend-config
        - secretRef:
            name: ai-calling-backend-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: temp-audio
          mountPath: /app/temp_audio
        - name: logs
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: temp-audio
        emptyDir:
          sizeLimit: 10Gi
      - name: logs
        emptyDir:
          sizeLimit: 5Gi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: ai-calling-backend-service
  namespace: ai-calling-agent
  labels:
    app: ai-calling-backend
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: ai-calling-backend

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-calling-backend-sa
  namespace: ai-calling-agent

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-calling-celery-worker
  namespace: ai-calling-agent
  labels:
    app: ai-calling-celery-worker
    version: v1
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ai-calling-celery-worker
  template:
    metadata:
      labels:
        app: ai-calling-celery-worker
        version: v1
    spec:
      serviceAccountName: ai-calling-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: celery-worker
        image: your-registry/ai-calling-agent-backend:latest
        command: ["celery", "-A", "src.app:app", "worker", "--loglevel=info", "--concurrency=4"]
        envFrom:
        - configMapRef:
            name: ai-calling-backend-config
        - secretRef:
            name: ai-calling-backend-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: temp-audio
          mountPath: /app/temp_audio
        - name: logs
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: temp-audio
        emptyDir:
          sizeLimit: 5Gi
      - name: logs
        emptyDir:
          sizeLimit: 2Gi
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-calling-celery-beat
  namespace: ai-calling-agent
  labels:
    app: ai-calling-celery-beat
    version: v1
spec:
  replicas: 1  # Only one beat scheduler needed
  selector:
    matchLabels:
      app: ai-calling-celery-beat
  template:
    metadata:
      labels:
        app: ai-calling-celery-beat
        version: v1
    spec:
      serviceAccountName: ai-calling-backend-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: celery-beat
        image: your-registry/ai-calling-agent-backend:latest
        command: ["celery", "-A", "src.app:app", "beat", "--loglevel=info"]
        envFrom:
        - configMapRef:
            name: ai-calling-backend-config
        - secretRef:
            name: ai-calling-backend-secrets
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        volumeMounts:
        - name: celery-beat-data
          mountPath: /app/celerybeat-schedule
        - name: logs
          mountPath: /app/logs
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: celery-beat-data
        persistentVolumeClaim:
          claimName: celery-beat-pvc
      - name: logs
        emptyDir:
          sizeLimit: 1Gi
      restartPolicy: Always

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: celery-beat-pvc
  namespace: ai-calling-agent
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ai-calling-backend-hpa
  namespace: ai-calling-agent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ai-calling-backend
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60